<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_egood1</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>receiver_x = path_get_x(path_receiver_level_1, 0); 
receiver_y = path_get_y(path_receiver_level_1, 0); 
state = ElectronState.Idle;
mov_speed = 25;
path_to_receiver = noone;
atom = noone;
points = 100;
img_p_index = 0;
spr_p_index = noone;
points_shown = false;
follow = false;
init_x = x;
init_y = y;
atomState = -1; 
glow = false;
multipler = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Launch toward receiver

global.launching_electron_cnt--;

if follow and atom and object_exists(atom) then
{
    x = atom.x + atom.atom_w_half;
    y = atom.y + atom.atom_h_half; 
}

path_to_receiver = scr_create_path(x, y, receiver_x, receiver_y, 32, mov_speed);

//keep mirroring the path to make seem a little more random
path_mirror(path_receiver_level_1);

//append the receiver path to newly created path
path_append(path_to_receiver, path_receiver_level_1);

path_set_kind(path_to_receiver, 1); //smooth
path_set_precision(path_to_receiver, 4);
path_set_closed(path_to_receiver, false); //make sure it is an open path

//turned off by default
visible = true;

//start the path
path_start(path_to_receiver, mov_speed, path_action_stop, true);

//reduce awaiting electron count 
if( instance_exists(atom) and atom != noone)
{
    atom.electrons_awaiting_launch--;
    if atom.electrons_awaiting_launch &lt; 0 then atom.electrons_awaiting_launch = 0;
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_msg(25, 128,  "Joe: TUBE SUCKING sound");
if obj_controller.state != ControllerState.GlobalReactionStarted 
and  obj_controller.state != ControllerState.Paused
{
    score += points * multipler;    
    score = score | 0;
    if points &lt; 0
    {
        if score &lt; global.lowest_score then score = global.lowest_score;
        else global.total_penalty += points;        
        global.consecutive_penalty++;
    } else {
        global.consecutive_penalty = 0;
    }
    
}

path_delete(path_to_receiver);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if glow then draw_sprite(spr_flare, 0, x, y);
draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
