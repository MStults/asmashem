<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dialog_med</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = (room_width / 2 - sprite_width / 2) | 0;
y = (room_height / 2 - sprite_height / 2) | 0;

left_x = x + ((sprite_width - 64 * 3) / 2) | 0;
mid_x = left_x + 64;
right_x = mid_x + 64;

top_y = y +  (((sprite_height - 64 * 2) / 2) | 0) - 64;
bottom_y = top_y + 64;;


kid_left = instance_create(left_x, bottom_y, obj_web_tut_atom);
with(kid_left)
{
    depth = other.depth - 1;    
    path_end_fn = scr_tut1_web_comine_kid;
    image_alpha= 0;
} 

kid_right = instance_create(right_x, bottom_y, obj_web_tut_atom);
with(kid_right)
{
    depth = other.depth - 1;    
    path_end_fn = scr_tut1_web_comine_kid;
    image_alpha= 0;
} 

active_atom = instance_create(mid_x, top_y, obj_web_tut_atom);
with(active_atom)
{
    depth = other.depth - 1;    
    path_end_fn = scr_tut1_web_comine;
    image_alpha= 0;
}

pointer = instance_create(mid_x + 35, top_y + 35, obj_tut_pointer);
with(pointer)
{
    depth = other.depth - 1;   
    image_alpha= 0;
}

alarm[3] = 20;
alarm[4] = 30; //show text

enum WEB_TUT1
{
    IDLE
    , RESET_FADE_OUT
    , RESET_FADE_IN
    , POINTER_FADE_OUT
    
}

state = WEB_TUT1.IDLE;

bs_alpha = 0;

     
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
with(kid_left)
{
    instance_destroy();
} 

with(kid_right)
{
    instance_destroy();
} 

with(active_atom)
{
   instance_destroy();
}

with(pointer)
{
   instance_destroy();
}

with(obj_tut1_text)
{
    instance_destroy();
}
with(obj_tut1_ok)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHOW TEXT and OK BUTTON

with(obj_tut1_text)
{
    event_user(0);
    depth = other.depth - 1;
}
with(obj_tut1_ok)
{
    click_handler = scr_tut1_web_click;
    event_user(0);
    depth = other.depth - 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///START FADE IN FIRST TIME

//alarm[0] = 7;
state = WEB_TUT1.RESET_FADE_IN;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SET STATE TO FADE OUT
state = WEB_TUT1.RESET_FADE_OUT;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///COMBINE ACTIVE
with(active_atom)
{
    p_part = global.p_atom_spark;
    p_cnt = 6;                     
    p_infront = true;
    effect_create_above(ef_ring, x + ATOM_H_W, y + ATOM_H_H, 1, c_red);   
    sprite_index = spr_atom_2;
}            
alarm[2] = room_speed * 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///START ACTIVE ATOM MOVING
with(active_atom)
{
    y = ystart;
    path_start(path_web_tut1, 4, path_action_stop, 0); 
}



with(pointer)
{    
    y = ystart;
    path_start(path_web_tut1, 4, path_action_stop, 0); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
bs_alpha += .05;
if bs_alpha &gt; 1 then bs_alpha = 1;

switch(state)
{
    case WEB_TUT1.RESET_FADE_OUT:
        with(active_atom)
        {
            image_alpha -= .05;
            if image_alpha &lt; 0 then image_alpha = 0;
            if image_alpha == 0 then other.state = WEB_TUT1.RESET_FADE_IN;
        }
                
        if state == WEB_TUT1.RESET_FADE_IN
        {
            with(kid_left)
            {
                x = xstart;
                image_alpha= 0;
                visible = true;
            }
            
            with(kid_right)
            {
                x = xstart;
                image_alpha= 0;
                visible = true;
            }
            
            with(active_atom)
            {
                y = ystart;
                image_alpha= 0;
                sprite_index = spr_atom_2_0;
            }
        }
        break;
        
    case WEB_TUT1.RESET_FADE_IN:
        with(kid_left)
        {           
            image_alpha += .05;
            if image_alpha &gt; 1 then image_alpha = 1;
        }
        
        with(kid_right)
        {          
            image_alpha += .05;
            if image_alpha &gt; 1 then image_alpha = 1;
        }
        
        with(active_atom)
        {          
            image_alpha += .05;
            if image_alpha &gt; 1 then image_alpha = 1;
            if image_alpha == 1 then other.state = WEB_TUT1.IDLE;
        }
        
        with(pointer)
        {
            y = ystart;
            visible = true;
            image_alpha += .05;
            if image_alpha &gt; 1 then image_alpha = 1;
        }
        
        if state == WEB_TUT1.IDLE
        {
            alarm[0] = 15;
        }
        break;
    case WEB_TUT1.POINTER_FADE_OUT:
        with(pointer)
        {
            image_alpha -= .08;
            if image_alpha &lt; 0 
            {
                visible = false;
                image_alpha = 0;
            }
           // if image_alpha == 0 then other.state = WEB_TUT1.RESET_FADE_IN;
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_draw_dialog_rec();
//draw_self();


/*
draw_sprite_ext(spr_board_space, 0, mid_x, top_y, 1, 1, 0, c_white, bs_alpha);
draw_sprite_ext(spr_board_space, 0, left_x, bottom_y, 1, 1, 0, c_white, bs_alpha);
draw_sprite_ext(spr_board_space, 1, mid_x, bottom_y, 1, 1, 0, c_white, bs_alpha);
draw_sprite_ext(spr_board_space, 0, right_x, bottom_y, 1, 1, 0, c_white, bs_alpha);
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
