<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_atom_laser</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_scale = 1;
draw_x = x;
draw_y = y;
draw_angle = 0;
starting_atom_type = noone;
atom_type = noone;

atom_w = obj_controller.atom_w;
atom_h = obj_controller.atom_h;
atom_w_half = obj_controller.atom_w_half;
atom_h_half = obj_controller.atom_h_half;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///START 
gravity = .5;
gravity_direction = point_direction(x,y, room_width / 2, room_height);
visible = true;


switch(starting_atom_type)
{
    case AtomType.One:        
        sprite_index = spr_atom_dop_0;
        global.doppel_created++;
        if(allow_special_atoms) ds_queue_enqueue(global.special_atom_queue, AtomType.Dop);
        //ending_atom_type = AtomType.Dop;    
        break;
        
    case AtomType.Two:
        sprite_index = spr_atom_shotgun_0;
        global.shotgun_created++;
        //ending_atom_type = AtomType.Shotgun;
        if(allow_special_atoms) ds_queue_enqueue(global.special_atom_queue, AtomType.Shotgun);
        break;
        
    case AtomType.Three:
        sprite_index = spr_atom_missile_0;
        global.missile_created++;
        //ending_atom_type = AtomType.Missile;  
        if(allow_special_atoms) ds_queue_enqueue(global.special_atom_queue, AtomType.Missile);     
        break;
        
    case AtomType.Four:
        sprite_index = spr_atom_laser_0;
        global.laser_created++;
        //ending_atom_type = AtomType.Laser;
        if(allow_special_atoms) ds_queue_enqueue(global.special_atom_queue, AtomType.Laser);
        break;
        
    case AtomType.Five:
        sprite_index = spr_atom_anti_0;
        global.anti_created++;
        //ending_atom_type = AtomType.Anti; //Anti Matter    
        if(allow_special_atoms) ds_queue_enqueue(global.special_atom_queue, AtomType.Anti);
        break;      
    case AtomType.Six:
        sprite_index = spr_atom_mine_0;
        global.mine_created++;
        if(allow_special_atoms) ds_queue_enqueue(global.special_atom_queue, AtomType.Mine);
        break;   
}








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rotate

//rotate radius = 45.255
draw_angle += 10;
draw_x = x + atom_w_half + 45.255 * cos(degtorad(135 + draw_angle));
draw_y = y - (atom_h_half + 45.255 * sin(degtorad(135 + draw_angle))) + atom_h;    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UPDATE NEXT ATOM PROCESS
//ds_stack_push(global.special_atom_stack, ending_atom_type);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, draw_x, draw_y, draw_scale, draw_scale, draw_angle, image_blend, image_alpha); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
