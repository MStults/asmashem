<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fb_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
current_index = 0;

len = array_length_1d(global.badges_earned);
screens = 0;
var xx = 0;
for(var i=0; i&lt;len; i++)
{
    badges[i] = 
    xx = i * room_width;
    screens[i] = instance_create(xx, 0, obj_badge_screen);
    with(screens[i])
    {
        var b = global.badges_earned[i];
        badge_icon = scr_badge_get_icon(b);
        text_arr = scr_badge_get_text(b); 
    }
}

btn_w = sprite_get_width(spr_next_w_lg);
btn_h = sprite_get_height(spr_next_w_lg);

share_index = 0;
share_x = ((room_width / 2) | 0) - btn_w - 7;
share_y = 550;

next_index = 0;
next_x = share_x + btn_w + 15;
next_y = share_y;

can_share = scr_can_share();

mov_speed = 60;
path_next = path_add();
path_add_point(path_next, 0, 0, mov_speed);
path_add_point(path_next, room_width * -1, 0, 100);

path_set_kind(path_next, 1); //smooth
path_set_precision(path_next, 4);
path_set_closed(path_next, false); //make sure it is an open path

is_dialog = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path_delete(path_next);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///POST SCORE TO FACEBOOK

if current_index &lt; len
{
    scr_play_snd(Sound.Click);
    scr_fb_post_badge(global.badges_earned[current_index]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Next
scr_play_snd(Sound.Click);

if current_index &gt;= len - 1
{
    room_goto(room_next(room));
} 
else 
{
    
    for(var i=0; i&lt;len; i++)
    {
        with(screens[i])
        {
            path_start(other.path_next, other.mov_speed, path_action_stop, false);
        }
    }
    current_index++;    
}


 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>next_index = 0;
var next_test = scr_btn_click(next_x, next_y, next_x + btn_w, next_y + btn_h);
if next_test &lt; 3 then next_index = next_test else alarm[0] = 1;    

if can_share
{
    share_index = 0;
    var share_test = scr_btn_click(share_x, share_y, share_x + btn_w, share_y + btn_h);
    if share_test &lt; 3 then share_index = share_test else alarm[1] = 1;   
} else {
    share_index = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW BADGE SCREEN

scr_draw_dialog_rec_ext(.7);

draw_sprite(spr_next_w_lg, next_index, next_x, next_y);
draw_sprite(spr_share_w_lg, share_index, share_x, share_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
