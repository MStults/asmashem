<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fb_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>obj_dialog</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
current_index = 0;

//var badgeArray = scr_get_all_badges();
var badgeArray = scr_get_earned_badges();
len = array_length_1d(badgeArray);
screens = 0;
var xx = 0;

for(var i=0; i&lt;len; i++)
{
    xx = i * room_width;
    screens[i] = instance_create(xx, 0, obj_badge_screen);
    with(screens[i])
    {
        //var b = global.badges_earned[i];
        //badge_icon = scr_badge_get_icon(b);
        //text_arr = scr_badge_get_text(b);     
        
        badge_icon = scr_badge_get_icon(badgeArray[i]);
        text_arr = scr_badge_get_text(badgeArray[i]);     
        draw_gui = true;
        badge_y += 145;
        text_y += 145;
        depth = other.depth - 1;
        draw_earned_msg = false;
    }
}

test_y = 155 + 145;
cx = (room_width / 2) | 0;
swipe_x0 = 0;
swipe_y0 = 0;
swipe_step = 0;
swipe_ms_dwn = false;

btn_w = sprite_get_width(spr_next_w_lg);
btn_h = sprite_get_height(spr_next_w_lg);


//share button
share_index = 0;
share_x = ((room_width / 2) | 0) - (btn_w / 2 | 0);
share_y = 600;

//back button
back_index = 0;
back_x = share_x - btn_w - 15;
back_y = share_y;

//next button
next_index = 0;
next_x = share_x + btn_w + 16;
next_y = share_y;

close_width = sprite_get_width(spr_close);
close_height = sprite_get_height(spr_close);
close_index = 0;
close_x = room_width - close_width - 15;
close_y = 15;

can_share = scr_can_share();

mov_speed = 60;
path_next = path_add();
path_add_point(path_next, 0, 0, mov_speed);
path_add_point(path_next, room_width * -1, 0, 100);

path_set_kind(path_next, 1); //smooth
path_set_precision(path_next, 4);
path_set_closed(path_next, false); //make sure it is an open path

path_prev = path_duplicate(path_next);
path_reverse(path_prev);

is_dialog = false;


flare_x = (room_width / 2) | 0;
flare_y = ((room_height / 2) | 0 ) - 90;
flare_scale = 3;
flare_max = 6;
flare_min = 3;
flare_rotate = 0;
flare_grow = true;
flare_angle = 0;

text_color = make_color_rgb(211, 255, 0);

























</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path_delete(path_next);
path_delete(path_prev);

for(var i=0; i&lt;len; i++)
{
    with(screens[i])
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CLOSE

instance_destroy();
scr_play_snd(Sound.Click);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHIFT badges TO THE LEFT
if current_index &lt;= 0
{
    current_index = 0;
    exit;
}

//if scr_check_UI_is_moving(screens, len) then exit;

scr_play_snd(Sound.Click);
current_index--;

for(var i=0; i&lt;len; i++)
{
    with(screens[i])
    {
        path_start(other.path_prev, other.mov_speed, path_action_stop, false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///POST SCORE TO FACEBOOK
scr_play_snd(Sound.Click);
//var total_stars = star1_val + star2_val + star1_val; 
//AtomFBPostScore(Reactor_Key, global.lvl_name, total, total_stars);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHIFT badges TO THE RIGHT

if current_index &gt;= (len - 1)
{
    current_index = len - 1;
    exit;
}

//if scr_check_UI_is_moving(screens, len) then exit;

scr_play_snd(Sound.Click);
current_index++;
    
for(var i=0; i&lt;len; i++)
{
    with(screens[i])
    {
        path_start(other.path_next, other.mov_speed, path_action_stop, false);
    }
}



 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if flare_grow
then flare_scale += .05;
else flare_scale -= .05;

if flare_scale &gt; flare_max then flare_grow = false;
if flare_scale &lt; flare_min then flare_grow = true;

flare_angle = (flare_angle + 2) % 360;    

if scr_check_UI_is_moving(screens, len) then exit;

var close_test = scr_btn_click(close_x, close_y, close_x + close_width, close_y + close_height);
if close_test &lt; 3 then close_index = close_test else alarm[3] = 1;

var back_test = 0;
if current_index &gt; 0
{
    back_index = 0;
    back_test = scr_btn_click(back_x, back_y, back_x + btn_w, back_y + btn_h);
    if back_test &lt; 3 then back_index = back_test else alarm[2] = 1;    
} else {
    //current_index = 0;
    back_index = 3;
}

var next_test = 0;
if current_index &lt; (len - 1)
{
    next_index = 0;
    next_test = scr_btn_click(next_x, next_y, next_x + btn_w, next_y + btn_h);
    if next_test &lt; 3 then next_index = next_test else alarm[0] = 1;    
} else {
    //current_index = len - 1;
    next_index = 3;
}

share_index = 0;
var share_test = 0;
if can_share
{   
    share_test = scr_btn_click(share_x, share_y, share_x + btn_w, share_y + btn_h);
    if share_test &lt; 3 then share_index = share_test else alarm[1] = 1;   
} else {
    share_index = 4;
}


if (close_test + back_test + next_test + share_test) &gt; 0 then exit;

if device_mouse_check_button_pressed(0, mb_any) 
{ 
    swipe_x0 = device_mouse_x(0);
    swipe_y0 = device_mouse_y(0);   
        
    var left = 0;
    var top = test_y - 225;
    var right = room_width;
    var bottom = test_y + 225; 
    
    if  point_in_rectangle(swipe_x0, swipe_y0, left, top, right, bottom) 
    {            
       
        swipe_step = 0;
        swipe_ms_dwn = true;
    }
}

if swipe_ms_dwn then swipe_step++;
if swipe_step &gt; 999 then swipe_step = 999;

if swipe_ms_dwn &amp;&amp; device_mouse_check_button_released(0, mb_any) 
{
  
    swipe_ms_dwn = false;
    var x1 = device_mouse_x(0);
    var y1 = device_mouse_y(0);
    if point_distance(swipe_x0, swipe_y0, x1, y1) &gt; 15
    {
        var dir = x1 - swipe_x0;
        if dir &lt; 0 
        {
            alarm[0] = 1; //next
        } else {
            alarm[2] = 1; // back
        }
    } else {
        if can_share then alarm[1] = 1; //share 
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW BADGE SCREEN

scr_draw_dialog_rec_ext(.9);

draw_sprite_ext(spr_flare_lg, 0, flare_x, flare_y, flare_max, flare_max, 0, image_blend, image_alpha); 

draw_sprite_ext(spr_flare_lg, 0, flare_x, flare_y, flare_scale, flare_scale, flare_angle, image_blend, image_alpha); 


draw_set_font(fnt_game_42);
draw_set_colour(text_color);
draw_set_halign(fa_center);

 draw_text(cx, 80, "Achievements"); 
//

draw_set_halign(fa_left);

draw_sprite(spr_close, close_index, close_x, close_y);
draw_sprite(spr_back_w_lg, back_index, back_x, back_y);
draw_sprite(spr_share_w_lg, share_index, share_x, share_y);
draw_sprite(spr_next_w_lg, next_index, next_x, next_y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW BADGE SCREEN
exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
