<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_atom_point_trigger</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>good_cnt = 0;
bad_cnt = 0;

last_atom = -1;

good_lightning_threshold = 6;
bad_lightning_threshold = 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RESET COUNTS

good_cnt = 0;
bad_cnt = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_electron">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    depth = 1;
    if points_shown then exit;
    points_shown = true;
    //only show points if reaction has not started but play the sound
    if points != 0 and obj_controller.state != ControllerState.GlobalReactionStarted 
    {
        var obj_pt = instance_create(x, y, obj_atom_points);
        obj_pt.image_index = img_p_index;
        obj_pt.sprite_index = spr_p_index;        
    }
    
    if(obj_controller.state != ControllerState.Paused) 
    {          
        if points &lt; 0 
        {
            other.bad_cnt++;
            scr_play_snd(Sound.Error); 
        } else {
            if atomState == AtomState.CombiningAxis then other.good_cnt++;  
            else other.good_cnt = 0;       
            
            scr_play_snd(Sound.Suction);  
        }
    }
}


if good_cnt &gt;= good_lightning_threshold or obj_controller.state == ControllerState.GlobalReactionStarted
{
    good_cnt = 0;    
    //var bolt = instance_create(random_range(0, room_width), 0, obj_lightning_reaction_bolt);   
    //obj_lightning_reaction_bolt.atom = other.atom;
    //obj_lightning_reaction_bolt.alarm[0] = 1;
}

if bad_cnt == 1 or good_cnt == 1 then alarm[0] = room_speed * 5;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
