<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pleasent_nuclear</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT 
w_half = (sprite_width / 2) | 0;
h_hlaf = (sprite_height / 2) | 0;
star_w_half = (sprite_get_width(spr_atom_sym) / 2) | 0;

star_total = scr_get_total_stars("PN");
star_total_cnt = scr_get_level_cnt("PN") * 3;

btn_w = sprite_get_height(spr_play_w);
btn_h = sprite_get_height(spr_play_w);

title_y = 0;
star_x = 0;
star_y = 0;
star_txt_y = 0;

play_index =0;
play_x = 0;
play_y = 0;

lvl_menu = rm_pn_levels_1;

destroy = false;

swipe_x0 = 0;
swipe_y0 = 0;
swipe_step = 0;
swipe_ms_dwn = false;

lock_sprite = noone;
locked = false;

pos_x = x;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GOTO ROOM

if locked then exit;

scr_play_snd(Sound.Click);
room_goto(lvl_menu);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHECK CLICK

play_index=0;
if global.dialog_shown then exit;

left = x - (sprite_width / 2) | 0;
top = y - (sprite_height / 2) | 0;

var play_test = scr_btn_click(play_x, play_y, play_x + btn_w, play_y + btn_h);
if play_test &lt; 3 then play_index = play_test else alarm[0] = 1;

if play_test == 0
{

    if device_mouse_check_button_pressed(0, mb_any) 
    {
        swipe_x0 = device_mouse_x(0);
        swipe_y0 = device_mouse_y(0);
        var left = x - sprite_xoffset, top = y - sprite_yoffset;
        var right = left + sprite_width, bottom = top + sprite_height;
        
        if  point_in_rectangle(swipe_x0, swipe_y0, left, top, right, bottom) 
        {            
            swipe_step = 0;
            swipe_ms_dwn = true;
        }
    }
    
    if swipe_ms_dwn then swipe_step++;
    if swipe_step &gt; 999 then swipe_step = 999;
    
    if swipe_ms_dwn &amp;&amp; device_mouse_check_button_released(0, mb_any) 
    {
        swipe_ms_dwn = false;
        var x1 = device_mouse_x(0);
        var y1 = device_mouse_y(0);
        
        if point_distance(swipe_x0, swipe_y0, x1, y1) &gt; 15
        {
            var dir = x1 - swipe_x0;
            if dir &lt; 0 
            {
                obj_select_reactor.alarm[1] = 1;
            } else {
                obj_select_reactor.alarm[0] = 1;
            }
        
        } else {
            alarm[0] = 1;
        }
        
        //point_distance
        
    }
    
    

}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHECK IF IT NEEDS DESTROYED 
path_speed = 0;
if destroy then instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW 

title_y = y - 15;
star_x = x - star_w_half;
star_y = title_y + 60;
star_txt_y = star_y + 75;

play_x = x - (btn_w / 2) | 0;
play_y = star_txt_y + 40;

draw_self();

if locked 
{
    draw_sprite(lock_sprite, 0, star_x + 32, star_y + 32);
} else {
    draw_set_colour(c_white);
    draw_set_font(global.fnt_game_20);
    draw_set_halign(fa_center);
    draw_sprite(spr_atom_sym, 1, star_x, star_y);
    draw_text(x, star_txt_y, string(star_total) + "/" + string(star_total_cnt));
    draw_set_halign(fa_left);
    
    if global.dialog_shown then exit;
    //draw_sprite_ext(spr_play_w, play_index, play_x, play_y, 1.1, 1.1, 0, c_white, 1);
    draw_sprite(spr_play_w, play_index, play_x, play_y);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
