<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_atom_dop_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT
atom = noone;
dopple_color = c_white;
draw_scale = 1;
draw_x = x;
draw_y = y;
draw_angle = 0;
last_dist = 9999;
image_index = irandom(image_number -1);
image_speed = 2;
half_w = sprite_width / 2;
half_h = sprite_height / 2;
enum DopState
{
    MovingTo
    , Doppeling
    , MovingFrom
    , Wait
}

state = DopState.Wait;
doppeling_time = room_speed * 1.5;
doppel_type = noone;
global.doppeling_cnt++;
emitter1 = part_emitter_create(p_system_back);

x1 = 0;
y1 = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CLEANUP
part_emitter_destroy(p_system_back, emitter1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send Off
scr_play_snd(Sound.Whoosh);
if instance_exists(atom) then with(atom)scr_doppel(other.doppel_type);
gravity = 2;
part_emitter_stream(global.p_system_back, emitter1, global.p_doppel, 0);
state = DopState.MovingFrom;


global.doppeling_cnt--;
if global.doppeling_cnt &lt; 0 then global.doppeling_cnt = 0;
if instance_exists(atom) then atom.state = AtomState.DoppelingEnd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///START
scr_play_snd(Sound.Doppel);
gravity = 2.5;

if instance_exists(atom) 
{
    x1 = atom.x;
    y1 = atom.y;
    atom.state = AtomState.DoppelingStart;
}

gravity_direction = point_direction(x, y, x1, y1);
if gravity_direction &lt; 1 then gravity_direction = 90;
state = DopState.MovingTo;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_scale += .02;
//draw_x = x  + (sprite_width - sprite_width * draw_scale) / 2;
//draw_y = y  + (sprite_height - sprite_height * draw_scale) / 2;  

switch(state)
{
    case DopState.MovingTo:
        if instance_exists(atom) 
        {
            x1 = atom.x;
            y1 = atom.y;
        }
        
        var dist =  point_distance(x, y, x1, y1);
        if last_dist &lt; dist or dist &lt; 4
        {
            gravity = 0;
            speed = 0;    
            x = x1;
            y = y1;
            alarm[1] = doppeling_time;
            state = DopState.Doppeling;      
            var xx = x + half_w;
            var yy = y + half_h;       
                        
            part_type_color1(global.p_doppel, dopple_color);
            part_emitter_region(p_system_back,emitter1,xx ,xx,yy,yy,ps_shape_ellipse,ps_distr_gaussian);      
            part_emitter_stream(global.p_system_back, emitter1, global.p_doppel,1);   
            state = DopState.Doppeling;           
        } else {        
            last_dist = dist;
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
